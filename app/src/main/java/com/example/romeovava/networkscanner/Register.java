package com.example.romeovava.networkscanner;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.graphics.Color;
import android.os.AsyncTask;
import android.support.annotation.NonNull;
import android.support.constraint.ConstraintLayout;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;

import android.support.v7.widget.Toolbar;
import android.text.TextUtils;
import android.util.Log;
import android.util.Patterns;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageButton;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class Register extends AppCompatActivity implements View.OnClickListener{
    private static final String TAG = "MainActivity" ;
    private OkHttpClient okhttp=new OkHttpClient();
    public String email;
    ConstraintLayout cl;
    Task task=new Task();
    EditText em;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.register);
        Toolbar toolbar=findViewById(R.id.toolbar);
        em=findViewById(R.id.email);
        cl=findViewById(R.id.layout);
        setSupportActionBar(toolbar);
        if (getSupportActionBar() != null) {
            getSupportActionBar().setTitle("");
            getSupportActionBar().setDisplayShowHomeEnabled(true);
            getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        }
        ImageButton sign_up=findViewById(R.id.sign_up);
        sign_up.setOnClickListener(this);
    }
    @Override
    public boolean onSupportNavigateUp() {
        onBackPressed();
        return true;
    }

    @Override
    public void onBackPressed() {
        super.onBackPressed();
        overridePendingTransition(R.anim.right_back, R.anim.left_back);
    }

    public static boolean isValidEmail(CharSequence target) {
        return (!TextUtils.isEmpty(target) && Patterns.EMAIL_ADDRESS.matcher(target).matches());
    }

    @Override
    public void onClick(View view) {
        switch(view.getId()){
            case R.id.sign_up:
                email= String.valueOf(em.getText());
                if(isValidEmail(email)) {
                    at at=new at();
                    at.execute();
                }else{
                    task.snackbar(cl,"Email Invalid");
                }
        }
    }


    @SuppressLint("StaticFieldLeak")
    private class at extends AsyncTask<Void,Void,String>{
        @Override
        protected String doInBackground(Void... voids) {
            String url="http://172.20.10.2/register";
            String[] data=new String[1];
            String[] data_type=new String[1];
            data_type[0]="email";
            data[0]=email;
            try {
                String json=task.model(data,data_type);
                Request request=task.post(url,json);
                //Using OKHttp to request the data from the server
                okhttp.newCall(request).enqueue(new Callback() {
                    @Override
                    public void onFailure(@NonNull Call call, @NonNull IOException e) {
                    }

                    @Override
                    public void onResponse(@NonNull Call call, @NonNull Response response) throws IOException {
                        try {
                            //if response success
                            if(response.isSuccessful()){
                                //take back the response body to string
                                String message=response.body().string();
                                //because the data return is in JSON, therefore we need the JSONObject to read the data
                                JSONObject result=new JSONObject(message);
                                String jsonResult=result.getString("Response");
                                //show the success on the log
                                Log.d(TAG,jsonResult);
                                if(jsonResult.equals("Token Resend")||jsonResult.equals("Token created")){
                                    Intent intent=new Intent(Register.this, Register_Token_Comfirm.class);
                                    overridePendingTransition(R.anim.right, R.anim.left);
                                    intent.putExtra("Email",email);
                                    startActivity(intent);
                                }else if(jsonResult.equals("Email already Registered")){
                                    task.snackbar(cl,"Email Registered");
                                }else{
                                    task.snackbar(cl,"Something went wrong! Please try again");
                                }
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                });
            } catch (JSONException e) {
                e.printStackTrace();
            }
            return null;
        }
    }

}
