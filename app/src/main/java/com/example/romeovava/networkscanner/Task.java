package com.example.romeovava.networkscanner;

import android.graphics.Color;
import android.support.annotation.NonNull;
import android.support.constraint.ConstraintLayout;
import android.support.design.widget.CoordinatorLayout;
import android.support.design.widget.Snackbar;
import android.text.TextUtils;
import android.util.Log;
import android.util.Patterns;
import android.widget.RelativeLayout;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.File;
import java.nio.file.Path;
import java.nio.file.Paths;

import fr.bmartel.protocol.http.utils.StringUtils;
import okhttp3.MediaType;
import okhttp3.MultipartBody;
import okhttp3.Request;
import okhttp3.RequestBody;

/**
 * Created by Romeo VaVa on 31/1/2018.
 *
 */

public class Task {
    private static final MediaType JSON=MediaType.parse("application/json;charset=utf-8");

    Task(){
    }


    public Request post(String url, String json) {
        //Request the body with JSON and JSON data type
        RequestBody body=RequestBody.create(JSON,json);
        //Build a requests and post the data to the specific url
        return new Request.Builder().url(url).post(body).build();
        //Using OKHttp to request the data from the server
    }

    public Request post_image(String url, String email, String token,String realpath) {
        if(realpath.contains("file://")){
            realpath=realpath.substring(7,realpath.length());
        }
        String exten=getFileExtension(new File(realpath));
        if(exten.equals("jpg")){
            exten="jpeg";
        }
        MediaType MEDIA_TYPE = MediaType.parse("image/"+exten);
        //mediatype - set the image extension
        RequestBody requestBody = new MultipartBody.Builder().setType(MultipartBody.FORM)
                .addFormDataPart("email",email)
                .addFormDataPart("token",token)
                .addFormDataPart("image", realpath.substring(realpath.lastIndexOf("/")+1),
                        RequestBody.create(MEDIA_TYPE, new File(realpath))).build();
        return new Request.Builder()
                .url(url)
                .post(requestBody)
                .build();
    }

    @NonNull
    public String model(String[] array,String[] data_type) throws JSONException {
        int length= array.length;
        JSONObject data=new JSONObject();
        for(int a=0;a<length;a++){
            data.put(data_type[a],array[a]);
        }
        return data.toString();
    }

    private static String getFileExtension(File file) {
        String fileName = file.getName();
        if(fileName.lastIndexOf(".") != -1 && fileName.lastIndexOf(".") != 0)
            return fileName.substring(fileName.lastIndexOf(".")+1);
        else return "";
    }

    public void snackbar(ConstraintLayout cl,String text) {
        Snackbar snackbar= Snackbar.make(cl,text,Snackbar.LENGTH_SHORT);
        snackbar.getView().setBackgroundColor(Color.RED);
        snackbar.show();
    }

    public void snackbar(RelativeLayout cl,String text) {
        Snackbar snackbar= Snackbar.make(cl,text,Snackbar.LENGTH_SHORT);
        snackbar.getView().setBackgroundColor(Color.RED);
        snackbar.show();
    }


    public void snackbar_pass(ConstraintLayout cl,String text) {
        Snackbar snackbar= Snackbar.make(cl,text,Snackbar.LENGTH_SHORT);
        snackbar.getView().setBackgroundColor(Color.parseColor("#8db600"));
        snackbar.show();
    }
    public void snackbar_pass2(RelativeLayout cl, String text) {
        Snackbar snackbar= Snackbar.make(cl,text,Snackbar.LENGTH_SHORT);
        snackbar.getView().setBackgroundColor(Color.parseColor("#8db600"));
        snackbar.show();
    }

    public boolean isValidEmail(CharSequence target) {
        return (!TextUtils.isEmpty(target) && Patterns.EMAIL_ADDRESS.matcher(target).matches());
    }

    public void snackbar(CoordinatorLayout cl,String text) {
        Snackbar snackbar= Snackbar.make(cl,text,Snackbar.LENGTH_SHORT);
        snackbar.getView().setBackgroundColor(Color.RED);
        snackbar.show();
    }
}