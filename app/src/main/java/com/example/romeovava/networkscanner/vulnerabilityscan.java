package com.example.romeovava.networkscanner;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.design.widget.AppBarLayout;
import android.support.design.widget.CollapsingToolbarLayout;
import android.support.design.widget.CoordinatorLayout;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.MenuItem;
import android.widget.TextView;
import android.widget.Toast;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.nmap4j.core.nmap.NMapExecutionException;
import org.nmap4j.core.nmap.NMapInitializationException;

import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

/**
 * Created by Romeo VaVa on 24/2/2018.
 */

public class vulnerabilityscan extends AppCompatActivity {
    CollapsingToolbarLayout ctl;
    UserLocalDatabase database;
    private OkHttpClient okhttp=new OkHttpClient();
    Task task=new Task();
    CoordinatorLayout cl;
    String name,detail,description,score;
    String token;
    String mi,code,recommendation;
    User user_profile;
    TextView tv12,tv2,tv10,tv4,tv8,tv6;
    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.vulnerability_page);
        Toolbar tb=findViewById(R.id.toolbar);
        setSupportActionBar(tb);
        getSupportActionBar().setDisplayShowHomeEnabled(true);
        ctl=findViewById(R.id.collapsing_toolbar);
        cl=findViewById(R.id.cl);
        tv2=findViewById(R.id.text2);
        tv4=findViewById(R.id.text4);
        tv6=findViewById(R.id.text6);
        tv8=findViewById(R.id.text8);
        tv10=findViewById(R.id.text10);
        tv12=findViewById(R.id.text12);
        Intent intent=getIntent();
        Toolbar toolbar=findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        if (getSupportActionBar() != null) {
            getSupportActionBar().setTitle("");
            getSupportActionBar().setDisplayShowHomeEnabled(true);
            getSupportActionBar().setDisplayHomeAsUpEnabled(true);
            getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_arrow_back);
        }
        database=new UserLocalDatabase(this);
        user_profile= database.getUserData();
        Log.d("asd",user_profile.token);
        name=intent.getStringExtra("name");
        ctl.setTitle(name);
        toolbarTextApperance();
        get_exploit ge=new get_exploit();
        ge.execute();
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                this.finish();
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }

    private void toolbarTextApperance() {
//        ctl.setCollapsedTitleTextAppearance(R.style.cool);
    }

    private class get_exploit extends AsyncTask<Void,Void,String>{
        @Override
        protected String doInBackground(Void... voids) {
            String url="http://172.20.10.2/vulneraibility/get_vulnerability";
            String[] data_type=new String[3];
            String[] data=new String[3];
            data_type[0]="name";
            data_type[1]="token";
            data_type[2]="email";
            data[0] = name;
            data[1] = user_profile.token;
            data[2] =user_profile.email;
            try {
                String json=task.model(data,data_type);
                Request request=task.post(url,json);
                okhttp.newCall(request).enqueue(new Callback() {
                    @Override
                    public void onFailure(@NonNull Call call, @NonNull IOException e) {
                        String error= e.getMessage();
                    }

                    @Override
                    public void onResponse(@NonNull Call call, @NonNull Response response) throws IOException {
                        try {
                            if(response.isSuccessful()){
                                String message=response.body().string();
                                JSONObject result=new JSONObject(message);
                                Log.d("asd",result.toString());
                                String jsonResult=result.getString("Response");
                                if(jsonResult.equals("Success")){
                                    JSONArray data = result.getJSONArray("Data");
                                    JSONArray items = result.getJSONArray("User");
                                    JSONObject user=items.getJSONObject(0);
                                    JSONObject vul=data.getJSONObject(0);
                                    token=user.getString("token");
                                    if(!(token.equals(user_profile.token))){
                                        database.storeToken(token);
                                        user_profile=database.getUserData();
                                    }
                                    name=vul.getString("Name");
                                    description=vul.getString("Description");
                                    score=vul.getString("Score");
                                    detail=vul.getString("Details");
                                    recommendation=vul.getString("Recommendation");
                                    code=vul.getString("Available Code");
                                    mi=vul.getString("More Info");
                                    vulnerabilityscan.this.runOnUiThread(new Runnable() {
                                        @Override
                                        public void run() {
                                            tv2.setText(description);
                                            tv4.setText(score);
                                            tv6.setText(detail);
                                            tv8.setText(recommendation);
                                            tv10.setText(code);
                                            tv12.setText(mi);
                                        }
                                    });

                                }else if(jsonResult.equals("Not Found")){
                                    task.snackbar(cl,"Not Found");
                                }else if(jsonResult.equals("Update Fail")){
                                    task.snackbar(cl,"Update Fail");
                                }else if(jsonResult.equals("Something went wrong!")){
                                    task.snackbar(cl,"Something went wrong!");
                                }else if(jsonResult.equals("Token Invalid")){
                                    task.snackbar(cl,"Token Invalid");
                                }else if(jsonResult.equals("Email Invalid")){
                                    task.snackbar(cl,"Email Invalid");
                            }
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                });
            } catch (JSONException e) {
                e.printStackTrace();
            }
            return null;
        }
    }

}
