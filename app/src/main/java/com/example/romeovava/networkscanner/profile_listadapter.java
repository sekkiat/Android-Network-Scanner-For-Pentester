package com.example.romeovava.networkscanner;

import android.content.Context;
import android.graphics.Typeface;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;

import java.util.List;

/**
 * Created by Romeo VaVa on 12/2/2018.
 *
 */

public class profile_listadapter extends RecyclerView.Adapter<profile_listadapter.viewholder> {
    private Context context;
    private List<content_profile> cartList;

    public profile_listadapter(Context context, List<content_profile> cartList){
        this.context = context;
        this.cartList = cartList;
    }

    //set to bind the view
    //ViewGround - is a view can contain child view
    public viewholder onCreateViewHolder(ViewGroup parent,int viewtype){
        //get the main context and inflat the list layout
        View itemview= LayoutInflater.from(parent.getContext()).inflate(R.layout.profile_list_item,parent,false);
        //so now we can get the id from the list
        return new viewholder(itemview);
    }

    @Override
    public void onBindViewHolder(viewholder holder, int position) {
        final content_profile item=cartList.get(position);
        holder.text1.setText(item.getItem());
        holder.text2.setText(item.getValue());

    }

    @Override
    public int getItemCount() {
        return cartList.size();
    }

    public void removeItem(int position) {
        cartList.remove(position);
        // notify the item removed by position
        // to perform recycler view delete animations
        // NOTE: don't call notifyDataSetChanged()
        notifyItemRemoved(position);
    }

    public void restoreItem(content_profile item, int position) {
        cartList.add(position, item);
        // notify item added by position
        notifyItemInserted(position);
    }

    //recycle inside
    public class viewholder extends RecyclerView.ViewHolder {
        TextView text1,text2;
        public RelativeLayout viewBackground, viewForeground;
        public viewholder(View view){
            super(view);
            text1=view.findViewById(R.id.text1);
            text2=view.findViewById(R.id.text2);
            Typeface mtypeFace = Typeface.createFromAsset(view.getContext().getAssets(), "font/ARLRDBD.TTF");
            text1.setTypeface(mtypeFace);
            text2.setTypeface(mtypeFace);
            viewBackground = view.findViewById(R.id.view_background);
            viewForeground = view.findViewById(R.id.view_foreground);
        }
    }
}
