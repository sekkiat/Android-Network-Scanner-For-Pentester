package com.example.romeovava.networkscanner;

import android.content.Intent;
import android.graphics.Color;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageButton;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

/**
 * Created by Romeo VaVa on 30/1/2018.
 */

public class Register_User extends AppCompatActivity implements View.OnClickListener{
    private static final String TAG = "MainActivity" ;
    EditText password,comfirm_password,name;
    private OkHttpClient okhttp=new OkHttpClient();
    ConstraintLayout cl;
    String email;
    UserLocalDatabase uld;
    Task task=new Task();
    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.register_user);
        Toolbar toolbar=findViewById(R.id.toolbar);
        cl=findViewById(R.id.layout);
        password=findViewById(R.id.password);
        uld=new UserLocalDatabase(this);
        ImageButton comfirm=findViewById(R.id.comfirm);
        comfirm_password=findViewById(R.id.comfirm_password);
        name=findViewById(R.id.name);
        setSupportActionBar(toolbar);
        if(getSupportActionBar()!=null){
            getSupportActionBar().setTitle("");
        }
        comfirm.setOnClickListener(this);
    }

    @Override
    public void onBackPressed() {
    }

    @Override
    public void onClick(View view) {
        switch(view.getId()) {
            case R.id.comfirm:
                if (String.valueOf(comfirm_password.getText()).equals("") || String.valueOf(name.getText()).equals("") ||
                        String.valueOf(password.getText()).equals("")) {
                    task.snackbar(cl,"Please fill in all the information");
                } else if(!(String.valueOf(password.getText()).equals(String.valueOf(comfirm_password.getText())))){
                    task.snackbar(cl,"Password incorrect");
                }else if(((String.valueOf(password.getText()).length())<6)||(String.valueOf(comfirm_password.getText()).length())<6){
                    task.snackbar(cl,"Password too short!");
                }else if((String.valueOf(password.getText()).equals(String.valueOf(comfirm_password.getText()))&&
                        !(String.valueOf(name.getText()).equals("")))){
                    At at=new At();
                    at.execute();
                }

        }
    }


    private class At extends AsyncTask<Void,Void,String>{
        @Override
        protected String doInBackground(Void... voids) {
            String url="http://172.20.10.2/register_user";
            String[] data_type=new String[3];
            String[] data=new String[3];
            data_type[0]="email";
            data_type[1]="password";
            data_type[2]="name";
            email=getIntent().getStringExtra("email");
            data[0] = email;
            data[1] = String.valueOf(password.getText());
            data[2] = String.valueOf(name.getText());
            try {
                String json=task.model(data,data_type);
                Request request=task.post(url,json);
                //Using OKHttp to request the data from the server
                okhttp.newCall(request).enqueue(new Callback() {
                    @Override
                    public void onFailure(@NonNull Call call, @NonNull IOException e) {
                        //if fail - show the error message in log
                        String error= e.getMessage();
                        Log.d(TAG,error);
                    }

                    @Override
                    public void onResponse(@NonNull Call call, @NonNull Response response) throws IOException {
                        try {
                            if(response.isSuccessful()){
                                String message=response.body().string();
                                JSONObject result=new JSONObject(message);
                                String jsonResult=result.getString("Response");
                                Log.d(TAG,jsonResult);
                                if(jsonResult.equals("Update Succesfully")){
                                    JSONArray items = result.getJSONArray("User");
                                    JSONObject user=items.getJSONObject(0);
                                    String token=user.getString("token");
                                    String expired_time=user.getString("expired_time");
                                    uld.setUserLoggedIn(true);
                                    uld.storeUserData(new User(name.getText().toString(),email,token,expired_time));
                                    Intent intent=new Intent(Register_User.this,home_navigate.class);
                                    startActivity(intent);
                                    overridePendingTransition(R.anim.right, R.anim.left);
                                }else{
                                    task.snackbar(cl,"Update Fail");
                                }
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                });
            } catch (JSONException e) {
                e.printStackTrace();
            }
            return null;
        }
    }
}
