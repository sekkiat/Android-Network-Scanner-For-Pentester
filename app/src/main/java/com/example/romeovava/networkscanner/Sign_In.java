package com.example.romeovava.networkscanner;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.AsyncTask;
import android.support.annotation.NonNull;
import android.support.constraint.ConstraintLayout;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class Sign_In extends AppCompatActivity implements View.OnClickListener{
    EditText email,password;
    private static final String TAG = "MainActivity" ;
    Task task;
    ConstraintLayout cl;
    UserLocalDatabase uld;
    private OkHttpClient okhttp=new OkHttpClient();
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.login);
        email=findViewById(R.id.email);
        password=findViewById(R.id.password);
        cl=findViewById(R.id.cl);
        Toolbar toolbar=findViewById(R.id.toolbar);
        ImageButton signin=findViewById(R.id.sign_in);
        TextView forgot_password=findViewById(R.id.forgot);
        setSupportActionBar(toolbar);
        if (getSupportActionBar() != null) {
            getSupportActionBar().setTitle("");
            getSupportActionBar().setDisplayShowHomeEnabled(true);
            getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        }
        signin.setOnClickListener(this);
        forgot_password.setOnClickListener(this);
        task=new Task();
        uld=new UserLocalDatabase(this);
    }
    @Override
    public boolean onSupportNavigateUp() {
        onBackPressed();
        return true;
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()){
            case R.id.forgot:
            Intent intent=new Intent(Sign_In.this,Forgot_Password.class);
            startActivity(intent);
            overridePendingTransition(R.anim.right, R.anim.left);
            break;
            case R.id.sign_in:
                if(email.getText().toString().equals("")||password.getText().toString().equals("")){
                    task.snackbar(cl,"Please fill in all the information");
                }else if(!task.isValidEmail(email.getText().toString())){
                    task.snackbar(cl,"Email not valid");
                }else{
                    At at=new At();
                    at.execute();
                }
                break;

        }
    }

    @SuppressLint("StaticFieldLeak")
    public class At extends AsyncTask<Void,Void,String>{

        @Override
        protected String doInBackground(Void... voids) {
            String url="http://172.20.10.2/login";
            String[] data_type=new String[2];
            String[] data=new String[2];
            data_type[0]="email";
            data_type[1]="password";
            data[0]=email.getText().toString();
            data[1]=password.getText().toString();
            try {
                final String json=task.model(data,data_type);
                Request request=task.post(url,json);
                okhttp.newCall(request).enqueue(new Callback() {
                    @Override
                    public void onFailure(@NonNull Call call, @NonNull IOException e) {
                        String error= e.getMessage();
                        Log.d(TAG,error);
                    }

                    @Override
                    public void onResponse(@NonNull Call call, @NonNull Response response) throws IOException {
                        if(response.isSuccessful()){
                            try {
                                String message=response.body().string();
                                JSONObject result=new JSONObject(message);
                                String jsonResult=result.getString("Response");
                                Log.d(TAG,jsonResult);
                                if(jsonResult.equals("Login Successfully")){
                                    JSONArray items = result.getJSONArray("User");
                                    JSONObject user=items.getJSONObject(0);
                                    String name=user.getString("name");
                                    String token=user.getString("token");
                                    String expired_time=user.getString("expired_time");
                                    uld.setUserLoggedIn(true);
                                    uld.storeUserData(new User(name,email.getText().toString(),token,expired_time));
                                    Intent intent=new Intent(Sign_In.this, home_navigate.class);
                                    startActivity(intent);
                                    overridePendingTransition(R.anim.right, R.anim.left);
                                }else{
                                    task.snackbar(cl,"Login Fail");
                                }
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }

                        }
                    }
                });
            } catch (JSONException e) {
                e.printStackTrace();
            }

            return null;
        }
    }

    @Override
    public void onBackPressed() {
        super.onBackPressed();
        overridePendingTransition(R.anim.right_back, R.anim.left_back);
    }
}
